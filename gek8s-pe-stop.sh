#!/bin/bash
# Copyright 2019 CRS4.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

#set -o nounset
set -o errexit
set -o pipefail
set -o errtrace

# current path
current_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# load commons
source "${current_path}/gek8s-common.sh"

# show help
function help() {
    local script_name=$(basename "$0")
    echo -e "\nUsage: ${script_name} [-f gek8s_config_file] [-v p1=v1] ... [-v pn=vn] <gek8s_machine_file>

    - gek8s_machine_file:     path of the machine file generated by GE (default: ${TMPDIR}/machines)    
    - gek8s_config_file:      defines environment variables to configure the gek8s join
    - p1=v1...pn=vn           configuration options (allowed properties: ${gek8s_allowed_config_properties})
    ">&2
}

# check whether there exists at least one argument
if [[ ${#positional_parameters[@]} -lt 1  ]]; then
    error_log "Invalid number of arguments"
    help
    exit 1
fi

# check whether the machine file generated by SGE exists
gek8s_machine_file=${positional_parameters[0]}
if [[ ! -f "${gek8s_machine_file}" ]]; then
    error_log "Machine file '${gek8s_machine_file}' doen't exist!"
    exit 1
fi

# prepare pdsh cmd
cmd="${gek8s_node_stop_launcher} kubeadm_config_template=${kubeadm_config_template} ${parameters}"
debug_log "COMMAND: ${cmd}"

# load environment module for running the pdsh parallel shell tool
if ! type pdsh >/dev/null 2>&1 ; then
    module load pdsh
fi

# prepare the host list as needed by pdsh, i.e., host1,host2,hostn
# it might be useless, depending on the format of the machine file directly generated by SGE
for host in $(cat ${gek8s_machine_file} | awk '{print $1}'); do
    hostlist="${hostlist}${host},"
done

# launch the k8s join on each SGE allocated node
pdsh -w ${hostlist} ${cmd}